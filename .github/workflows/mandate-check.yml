name: Check Mandates

on:
  schedule:
    # Toutes les 5 minutes
    - cron: '*/5 * * * *'
  workflow_dispatch:  # Permet de dÃ©clencher manuellement le workflow

jobs:
  check-mandates:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Create .env file
        run: |
          echo "AIRTABLE_API_KEY=${{ secrets.AIRTABLE_API_KEY }}" > .env
          echo "AIRTABLE_BASE_ID=${{ secrets.AIRTABLE_BASE_ID }}" >> .env
          echo "AIRTABLE_TABLE_NAME=${{ secrets.AIRTABLE_TABLE_NAME }}" >> .env
          echo "AIRTABLE_INSTALLERS_BASE_ID=${{ secrets.AIRTABLE_INSTALLERS_BASE_ID }}" >> .env
          echo "AIRTABLE_INSTALLATEURS_TABLE=${{ secrets.AIRTABLE_INSTALLATEURS_TABLE }}" >> .env
          echo "SELLSY_CONSUMER_TOKEN=${{ secrets.SELLSY_CONSUMER_TOKEN }}" >> .env
          echo "SELLSY_CONSUMER_SECRET=${{ secrets.SELLSY_CONSUMER_SECRET }}" >> .env
          echo "SELLSY_USER_TOKEN=${{ secrets.SELLSY_USER_TOKEN }}" >> .env
          echo "SELLSY_USER_SECRET=${{ secrets.SELLSY_USER_SECRET }}" >> .env
          echo "GOCARDLESS_DIRECT_LINK=${{ secrets.GOCARDLESS_DIRECT_LINK }}" >> .env
          echo "LOG_DIR=logs" >> .env
          echo "CHECK_INTERVAL=300" >> .env
      
      - name: Create logs directory
        run: mkdir -p logs
      
      - name: Run mandate check script
        run: python mandate_checker.py
      
      - name: Upload logs as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mandate-check-logs
          path: logs/
          retention-days: 7
